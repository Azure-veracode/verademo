#This pipeline will zip the java script application and upload it to the veracode portal for scan
#This pipeline has flaw imported - which will be added in the azure boards
#$(Build.SourcesDirectory) will take the entire source code of this repo

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: Bash@3
  displayName: 'Veracode SCA scan'
  inputs:
    targetType: 'inline'
    script: |
          cd app
          export SRCCLR_API_TOKEN=$(SRCCLR)
          curl -sSL https://download.sourceclear.com/ci.sh | bash -s -- scan --update-advisor

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: Bash@3
  displayName: Veracode Pipeline
  inputs:
    targetType: 'inline'
    script: |
      curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      unzip -o pipeline-scan-LATEST.zip
      java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip' || true
- publish: $(System.DefaultWorkingDirectory)/results.json
  artifact: VeracodeBaseline
  


- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'veracode'
    veracodeAppProfile: 'VeraDemo'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)/$(Build.BuildId)-js.zip'
    importResults: true
    maximumWaitTime: '360'
    
- task: Veracode Flaw Importer@3
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'veracode'
    veracodeAppProfile: 'VeraDemo'
    sandboxName: 
    scanType: 'Static, SCA'
    importType: 'All Unmitigated Flaws Violating Policy'
    workItemType: 'Issue'
    area: '$(system.teamProject)'
    overwriteAreaPathInWorkItemsOnImport: true
    iterationPath: '$(system.teamProject)'
    overwriteIterationPath: true
    flawImportLimit: '1000'
